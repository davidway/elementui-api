package com.blockchain.service.impl;

import org.apache.commons.lang3.StringUtils;

import org.springframework.stereotype.Service;

import org.springframework.transaction.annotation.Transactional;

import com.blockchain.VO.ConfigPropertiesForm;
import com.blockchain.exception.BodyException;
import com.blockchain.exception.ErrorMessage;
import com.blockchain.service.ConfigPropertiesService;
import com.blockchain.util.ConfigUtils;
import com.tencent.trustsql.sdk.TrustSDK;
import com.tencent.trustsql.sdk.exception.TrustSDKException;

@Service
public class ConfigPropertiesServiceImpl implements ConfigPropertiesService {

	@Override
	public void add(ConfigPropertiesForm configPropertiesForm) throws TrustSDKException, BodyException {
		String chainId = configPropertiesForm.getChainId();
		String ledgerId = configPropertiesForm.getLedgerId();
		String mchId = configPropertiesForm.getMchId();
		String nodeId = configPropertiesForm.getNodeId();
		String createUserPrivateKey = configPropertiesForm.getCreateUserPrivateKey();
		String createUserPublicKey = configPropertiesForm.getCreateUserPublicKey();
		
	
		if (StringUtils.isNotBlank(chainId)) {
			ConfigUtils.setChainId(chainId);
		}
		if (StringUtils.isNotBlank(ledgerId)) {

			ConfigUtils.setLedgerId(ledgerId);
		}
		if (StringUtils.isNotBlank(mchId)) {
			ConfigUtils.setMchId(mchId);
		}
		if (StringUtils.isNotBlank(nodeId)) {
			ConfigUtils.setNodeId(nodeId);
		}
		if (StringUtils.isNotBlank(createUserPrivateKey)) {
			ConfigUtils.setCreateUserPrivateKey(createUserPrivateKey);
		}
		if (StringUtils.isNotBlank(createUserPublicKey)) {
			ConfigUtils.setCreateUserPublicKey(createUserPublicKey);
		}

		return;
	}

	@Override
	public ConfigPropertiesForm get() {
		ConfigPropertiesForm configPropertiesForm = new ConfigPropertiesForm();
		String chainId = ConfigUtils.getChainId();
		String ledgerId = ConfigUtils.getLedgerId();
		String mchId = ConfigUtils.getMchId();
		String nodeId = ConfigUtils.getNodeId();
		String createUserPrivateKey = ConfigUtils.getCreateUserPrivateKey();
		String createUserPublicKey = ConfigUtils.getCreateUserPublicKey();
		
		configPropertiesForm.setChainId(chainId);

		configPropertiesForm.setLedgerId(ledgerId);

		configPropertiesForm.setMchId(mchId);

		configPropertiesForm.setNodeId(nodeId);

		configPropertiesForm.setCreateUserPrivateKey(createUserPrivateKey);

		configPropertiesForm.setCreateUserPublicKey(createUserPublicKey);
		return configPropertiesForm;
		
	}

}
